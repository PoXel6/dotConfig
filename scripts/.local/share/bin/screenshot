#!/usr/bin/env bash

PICTURES="$HOME/Pictures"

restore_shader() {
	if [ -n "$shader" ]; then
		hyprshade on "$shader"
	fi
}

save_shader() {
	shader=$(hyprshade current)
	hyprshade off
	trap restore_shader EXIT
}

save_shader

scrDir=$(dirname "$(realpath "$0")")
swpy_dir="$PICTURES/screenshots/.swappy"
save_dir="${2:-$PICTURES/screenshots}"
save_file=$(date +'%y%m%d_%Hh%Mm%Ss_screenshot.png')
temp_screenshot="/tmp/screenshot.png"

mkdir -p $save_dir
mkdir -p $swpy_dir
echo -e "[Default]\nsave_dir=$save_dir\nsave_filename_format=$save_file" >$swpy_dir/config

if [[ $# != 0 ]]; then
	result=$1
else
	result=$(echo \
		"Area
Frozen
Monitor
All Monitors" | rofi -dmenu)
fi

case $result in
"All Monitors")
	notify-send "Screenshot of Screens" "Screenshot has been copies to your clipboard" -a grimblast -u low
	grimblast copysave screen $temp_screenshot && restore_shader && swappy -f $temp_screenshot
	;;
Area)
	notify-send "Screenshot of Area" "Screenshot has been copies to your clipboard" -a grimblast -u low
	grimblast copysave area $temp_screenshot && restore_shader && swappy -f $temp_screenshot
	;;
Frozen)
	notify-send "Screenshot of frozen Area" "Screenshot has been copies to your clipboard" -a grimblast -u low
	grimblast --freeze copysave area $temp_screenshot && restore_shader && swappy -f $temp_screenshot
	;;
Monitor)
	notify-send "Screenshot of Screen" "Screenshot has been copies to your clipboard" -a grimblast -u low
	grimblast copysave output $temp_screenshot && restore_shader && swappy -f $temp_screenshot
	;;
*)
	notify-send -u High "ERROR" "Something went wrong!" ;;
esac

rm "$temp_screenshot"

if [ -f "${save_dir}/${save_file}" ]; then
	notify-send -a "t1" -i "${save_dir}/${save_file}" "saved in ${save_dir}"
fi
