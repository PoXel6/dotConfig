#!/usr/bin/env bash

NAME="startech"

LAUNCHER="$HOME/.local/share/xmcl/instances"
INSTANCE="$LAUNCHER/Star Technology-1.20.1"
SAVES="$INSTANCE/saves"
WORLD="$SAVES/BrandNewStartFR"
TEST_WORLD="$SAVES/bnsfr-copy-$(date -Idate)"
NOTIF_SOURCE="Star\ Technology"

# Help page
usage() {
	echo "Just a simple script to automate my need for making Star Technology worlds"
	echo ""
	echo "Usage:"
	echo "	$NAME [option] [options for options]"
	echo ""
	echo "Options:"
	echo "	-h, --help				shows this text"
	echo ""
	echo "Commands:"
	echo "	backup					create a zip backup of the world."
	echo "	copy [create | remove]			creates or removes a copy of the main world"
}

status() {
	eza -1 --icons=always -stype "$SAVES"
}

backup() {
	backup_file=$NAME-backup.zip
	cd "$SAVES"
	if [[ -f $backup_file ]]; then
		zip -db -r -dc -u $backup_file "$WORLD"
	else
		zip -db -dc $backup_file "$WORLD"
	fi
	notify-send -u low -a "$NOTIF_SOURCE" "Backup Finished" "$(echo $WORLD | sed "s|$LAUNCHER/||") is backed up."
}

copy() {
	case $1 in
	rmcopy)
		rmcopy
		;;
	mkcopy)
		mkcopy
		;;
	*)
		echo "[ERROR]: invalid options try\n\t<name> [mkcopy|rmcopy|backup]"
		;;
	esac
}

mkcopy() {
	if [[ ! -d "$TEST_WORLD" ]]; then
		cp -r "$WORLD" "$TEST_WORLD"
		balls=
		notify-send -u low -a "$NOTIF_SOURCE" "Copy Created" "$(echo "Created $TEST_WORLD" | sed "s|$LAUNCHER/||")"
	else
		echo "[Info]: World copy already exists"
		echo "[Info]: if you wish to delete it run:"
		echo "	$NAME copy remove|rm"
	fi
}

rmcopy() {
	if [[ ! -d "$TEST_WORLD" ]]; then
		echo "[Info]: Found no world copy of today"
		echo "[Info]: if you wish to create it run:"
		echo "	$NAME copy [create]"
	else
		rm -r "$TEST_WORLD"
		notify-send -u low -a "$NOTIF_SOURCE" "Copy Deleted" "$(echo "Deleted $TEST_WORLD" | sed "s|$LAUNCHER/||")"
	fi
}

if [[ $# != 0 ]]; then
	case $1 in
	status)
		status
		;;
	backup)
		backup
		status
		;;
	mkcopy)
		copy $1
		status
		;;
	rmcopy)
		copy $1
		status
		;;

	* | --help | -h)
		usage
		;;
	esac
else
	backup
fi
